@startuml sequence_sign_in
title Sign-In Flow

actor User
participant "LoginScreen" as UI
participant "AuthProvider" as Provider
participant "AuthRepository" as Repo
participant "SupabaseService" as Service
participant "Supabase Auth" as Auth
database "Supabase DB" as DB

User -> UI: Enter credentials
activate UI

User -> UI: Tap "Sign In"
UI -> Provider: signIn(email, password)
activate Provider

Provider -> Provider: Set loading state

Provider -> Repo: signIn(email, password)
activate Repo

Repo -> Service: Get Supabase client
activate Service
Service --> Repo: Client instance
deactivate Service

Repo -> Auth: signInWithPassword(email, password)
activate Auth

alt Credentials Valid
  Auth --> Repo: AuthResponse(session, user)
  
  Repo -> DB: SELECT * FROM users WHERE id = user.id
  activate DB
  DB --> Repo: User profile data
  deactivate DB
  
  Repo --> Provider: AppUser object
  deactivate Repo
  
  Provider -> Provider: Set currentUser
  Provider -> Provider: Save session
  Provider -> Provider: Clear loading state
  Provider --> UI: Success
  deactivate Provider
  
  UI -> UI: Navigate to HomeScreen
  UI --> User: Show Home Dashboard
  
else Credentials Invalid
  Auth --> Repo: AuthException
  deactivate Auth
  
  Repo --> Provider: throw Exception
  activate Provider
  Provider -> Provider: Set error message
  Provider -> Provider: Clear loading state
  Provider --> UI: Error message
  deactivate Provider
  
  UI --> User: Display error "Invalid credentials"
  
else Network Error
  Auth --> Repo: NetworkException
  Repo --> Provider: throw Exception
  activate Provider
  Provider -> Provider: Set error message
  Provider --> UI: Error message
  deactivate Provider
  
  UI --> User: Display error "Network error"
end

deactivate UI

note right of Provider
  AuthProvider maintains 
  authentication state and 
  notifies UI via ChangeNotifier
end note

note left of Auth
  Supabase Auth handles:
  - Password validation
  - Session creation
  - JWT token generation
  - Rate limiting
end note

note bottom of DB
  Row Level Security (RLS)
  ensures user can only
  access own profile
end note

@enduml
