@startuml sequence_map_navigation
title Student Navigates to Campus Location

actor Student
participant "CampusMapScreen" as UI
participant "LocationRepo" as LocRepo
participant "DirectionsService" as DirService
participant "GoogleMapsController" as MapController
participant "Geolocator" as Geolocator
participant "Google Maps API" as MapsAPI
participant "Google Directions API" as DirectionsAPI

Student -> UI: Open Campus Map
activate UI

UI -> LocRepo: getCampusLocations()
activate LocRepo
LocRepo -> LocRepo: Query Supabase DB
LocRepo --> UI: List of locations
deactivate LocRepo

UI -> MapController: Display locations as markers
activate MapController
MapController --> UI: Map with markers
deactivate MapController

Student -> UI: Tap "My Location" button

UI -> Geolocator: checkPermission()
activate Geolocator

alt Permission Granted
  Geolocator --> UI: Permission OK
  
  UI -> Geolocator: getCurrentPosition()
  Geolocator -> Geolocator: Access device GPS
  Geolocator --> UI: Current coordinates (lat, lng)
  deactivate Geolocator
  
  UI -> MapController: animateCamera(userLocation, zoom: 18)
  activate MapController
  MapController -> MapsAPI: Update camera position
  activate MapsAPI
  MapsAPI --> MapController: Camera updated
  deactivate MapsAPI
  MapController --> UI: Show user location
  deactivate MapController
  
  UI --> Student: Display current location
  
else Permission Denied
  Geolocator --> UI: Permission denied
  deactivate Geolocator
  UI --> Student: Show permission request dialog
  
  Student -> UI: Grant permission
  UI -> Geolocator: requestPermission()
  activate Geolocator
  Geolocator --> UI: Permission granted
  deactivate Geolocator
end

Student -> UI: Select destination (tap marker)
UI -> UI: Show location details

Student -> UI: Tap "Navigate" button

UI -> DirService: getDirections(origin, destination)
activate DirService

DirService -> DirectionsAPI: GET /directions/json
activate DirectionsAPI

alt Directions Found
  DirectionsAPI --> DirService: JSON response (routes, polyline)
  deactivate DirectionsAPI
  
  DirService -> DirService: Decode polyline
  DirService --> UI: RouteData (points, distance, duration)
  deactivate DirService
  
  UI -> MapController: drawPolyline(points, color: blue)
  activate MapController
  MapController -> MapsAPI: Add polyline overlay
  activate MapsAPI
  MapsAPI --> MapController: Polyline displayed
  deactivate MapsAPI
  MapController --> UI: Route visible
  deactivate MapController
  
  UI -> MapController: fitBounds(origin, destination)
  activate MapController
  MapController -> MapsAPI: Adjust camera bounds
  activate MapsAPI
  MapsAPI --> MapController: Bounds fitted
  deactivate MapsAPI
  MapController --> UI: Route fully visible
  deactivate MapController
  
  UI --> Student: Display route with distance and duration
  
  Student -> UI: Follow route
  UI -> Geolocator: Stream position updates
  activate Geolocator
  
  loop While navigating
    Geolocator --> UI: Updated position
    UI -> MapController: Update user marker
    activate MapController
    MapController --> UI: Marker moved
    deactivate MapController
  end
  deactivate Geolocator
  
  Student -> UI: Tap "Clear Route"
  UI -> MapController: clearPolyline()
  activate MapController
  MapController --> UI: Route cleared
  deactivate MapController
  
else No Route Found
  DirectionsAPI --> DirService: Error response
  DirService --> UI: Exception
  UI --> Student: Display "Route not available"
  
else Network Error
  DirectionsAPI --> DirService: Network error
  DirService --> UI: Exception
  UI --> Student: Display "Network error"
end

deactivate UI

note right of Geolocator
  Location permission:
  1. Check current status
  2. Request if not granted
  3. Handle denial gracefully
  
  Real-time position updates
  during navigation
end note

note left of DirectionsAPI
  Google Directions API:
  - Optimized walking routes
  - Turn-by-turn steps
  - Distance and duration
  - Encoded polyline
  
  API key required
end note

note bottom of MapController
  Google Maps Flutter plugin:
  - Map rendering
  - Marker placement
  - Polyline drawing
  - Camera animations
  - User interactions
end note

note right of UI
  Navigation features:
  - Real-time user location
  - Route visualization
  - Distance/duration display
  - Clear route option
  
  Optimized performance:
  - Debounced position updates
  - Cached location data
end note

@enduml
